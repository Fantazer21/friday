{"version":3,"sources":["UI-kit/Range/Range.module.css","UI-kit/Checkbox/Checkbox.module.css","UI-kit/Input/Input.module.css","UI-kit/Button/Button.module.css","UI-kit/Radio/Radio.module.css","UI-kit/Select/Select.module.css","UI-kit/Button/Button.tsx","UI-kit/Checkbox/Checkbox.tsx","UI-kit/Input/Input.tsx","UI-kit/EditableSpan/EditableSpan.tsx","UI-kit/Radio/Radio.tsx","UI-kit/Select/Select.tsx","UI-kit/Range/Range.tsx","components/TestPage/TestPage.tsx","App.tsx","index.tsx"],"names":["module","exports","Button","red","className","restProps","finalClassName","s","default","Checkbox","type","onChange","onChangeChecked","children","spanClassName","checkbox","e","currentTarget","checked","input","label","Input","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","finalInputClassName","errorInput","superInput","value","key","EditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","style","fontSize","Radio","name","options","onChangeOption","onChangeCallback","mappedOptions","map","o","i","optionInput","customRadios","Select","select","console","log","Range","onChangeRange","styles","slider","wrapper","container","sliderTrack","doubleRange","TestPage","arr","rangeValue","setRangeValue","display","flexDirection","justifyContent","alignItems","height","marginTop","App","ReactDOM","render","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,UAAY,yBAAyB,YAAc,2BAA2B,YAAc,6B,iBCA/ID,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,MAAQ,0B,gBCA1DD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,WAAa,0BAA0B,MAAQ,uB,iBCAxGD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,IAAM,sB,gBCA1DD,EAAOC,QAAU,CAAC,aAAe,4BAA4B,YAAc,2BAA2B,aAAa,4B,iBCAnHD,EAAOC,QAAU,CAAC,OAAS,yB,oKCWdC,EAAoC,SAAC,GAI3C,IAHLC,EAGI,EAHJA,IACAC,EAEI,EAFJA,UACGC,EACC,mCACEC,EAAc,UAAMH,EAAMI,IAAEJ,IAAMI,IAAEC,QAAtB,YAAiCJ,GAErD,OAAO,oCAAQA,UAAWE,GAAoBD,K,gBCFnCI,EAAwC,SAAC,GAQhD,EAPJC,KAOK,IANLC,EAMI,EANJA,SACAC,EAKI,EALJA,gBACAR,EAII,EAJJA,UAEAS,GAEI,EAHJC,cAGI,EAFJD,UACGR,EACC,4FAMqB,UAAME,IAAEQ,SAAR,YAAoBX,GAAwB,IAErE,OACE,qCACE,mCACEM,KAAM,WACNC,SAXmB,SAACK,GACxBL,GAAYA,EAASK,GACrBJ,GAAmBA,EAAgBI,EAAEC,cAAcC,UAU/Cd,UAAWG,IAAEY,OACTd,IAELQ,GAAY,sBAAMT,UAAWG,IAAEO,cAAnB,SAAmCD,IAChD,uBAAOT,UAAWG,IAAEa,QAAgB,Q,wBCtB7BC,EAAkC,SAAC,GAU1C,EATJX,KASK,IARLC,EAQI,EARJA,SACAW,EAOI,EAPJA,aACAC,EAMI,EANJA,WACAC,EAKI,EALJA,QACAC,EAII,EAJJA,MACArB,EAGI,EAHJA,UACAU,EAEI,EAFJA,cACGT,EACC,6GAUEqB,EAAkB,UAAMnB,IAAEkB,MAAR,YAAiBX,GAAgC,IACnEa,EAAmB,UAAMF,EAAQlB,IAAEqB,WAAarB,IAAEsB,WAA/B,YACvBzB,GAAwB,IAG1B,OACE,qCACE,mCACEM,KAAM,OACNC,SAlBmB,SAACK,GACxBL,GAAYA,EAASK,GACrBM,GAAgBA,EAAaN,EAAEC,cAAca,QAiBzCP,WAfqB,SAACP,GAC1BO,GAAcA,EAAWP,GACzBQ,GAAqB,UAAVR,EAAEe,KAAmBP,KAc5BpB,UAAWuB,GACPtB,IAELoB,GAAS,sBAAMrB,UAAWsB,EAAjB,SAAsCD,QCzBzCO,EAA2C,SAAC,GAMnD,EALJC,UAKK,IAJLC,EAII,EAJJA,OACAV,EAGI,EAHJA,QACAW,EAEI,EAFJA,UACG9B,EACC,8DAC4B+B,oBAAkB,GAD9C,mBACGC,EADH,KACaC,EADb,OAGFH,GAAa,GADPtB,EAFJ,EAEIA,SAAU0B,EAFd,EAEcA,cAAenC,EAF7B,EAE6BA,UAAcoC,EAF3C,wDAqBE1B,EAAmB,+KAAN,WAA4CV,GAE/D,OACE,mCACGiC,EACC,cAAC,EAAD,aACEJ,WAAS,EACTC,OApBe,SAAClB,GACtBsB,GAAY,GAEZJ,GAAUA,EAAOlB,IAkBXQ,QAxBgB,WACtBA,GAAWA,MAwBDnB,IAGN,+CACEkC,cArBsB,SAC5BvB,GAEAsB,GAAY,GAEZC,GAAiBA,EAAcvB,IAiBzBZ,UAAWU,GACP0B,GAHN,cAKE,cAAC,IAAD,CAAQC,MAAO,CAAEC,SAAU,YAAe,IACzC7B,GAAYR,EAAUyB,a,iBCzDpBa,EAAkC,SAAC,GAQ1C,EAPJjC,KAOK,IANLkC,EAMI,EANJA,KACAC,EAKI,EALJA,QACAf,EAII,EAJJA,MACAnB,EAGI,EAHJA,SACAmC,EAEI,EAFJA,eAGMC,GADF,6EACqB,SAAC/B,GACxBL,GAAYA,EAASK,GACrB8B,GAAkBA,EAAe9B,EAAEC,cAAca,SAG7CkB,EAAuBH,EACzBA,EAAQI,KAAI,SAACC,EAAGC,GAAJ,OACV,kCACE,uBACE/C,UAAWG,IAAE6C,YACb1C,KAAK,QACLkC,KAAMA,EACNd,MAAOoB,EACPhC,QAASY,IAAUoB,EACnBvC,SAAUoC,IAEXG,IATSN,EAAO,IAAMO,MAY3B,GAEJ,OAAO,qBAAK/C,UAAWG,IAAE8C,aAAlB,SAAiCL,K,iBC9B7BM,EAAoC,SAAC,GAK3C,IAJLT,EAII,EAJJA,QACAlC,EAGI,EAHJA,SACAmC,EAEI,EAFJA,eACGzC,EACC,uDACE2C,EAAuBH,EACzBA,EAAQI,KAAI,SAACC,EAAGC,GACd,OAAO,iCAAiBD,GAAJC,MAEtB,GAQJ,OACE,qBAAK/C,UAAWG,IAAEgD,OAAlB,SACE,gDAAQ5C,SARa,SAACK,GACxBL,GAAYA,EAASK,GACrB8B,GAAkBA,EAAe9B,EAAEC,cAAca,OACjD0B,QAAQC,IAAI,UAAYzC,EAAEC,cAAca,SAKEzB,GAAxC,aACG2C,Q,gBCtBIU,EAAkC,SAAC,GAO1C,EANJhD,KAMK,IALLC,EAKI,EALJA,SACAgD,EAII,EAJJA,cACAvD,EAGI,EAHJA,UAEGC,GACC,EAFJyB,MAEI,wEAOqB,UAAM8B,IAAOC,OAAb,YAAuBzD,GAAwB,IAExE,OACE,qBAAKA,UAAWwD,IAAOE,QAAvB,SACE,sBAAK1D,UAAWwD,IAAOG,UAAvB,UACE,qBAAK3D,UAAWwD,IAAOI,cACvB,mCACEtD,KAAM,QACNN,UAAWwD,IAAOK,YAClBtD,SAfiB,SAACK,GACxBL,GAAYA,EAASK,GAErB2C,GAAiBA,GAAe3C,EAAEC,cAAca,SAatCzB,UC/BD6D,EAAW,WACtB,IAAMC,EAAgB,CAAC,QAAS,QAAS,UADb,EAEI/B,mBAAS+B,EAAI,IAFjB,mBAErBrC,EAFqB,KAEdgB,EAFc,OAGQV,mBAAS,GAHjB,mBAGrBgC,EAHqB,KAGTC,EAHS,KAS5B,OACE,sBACE5B,MAAO,CACL6B,QAAS,OACTC,cAAe,SACfC,eAAgB,eAChBC,WAAY,SACZC,OAAQ,OACRC,UAAW,QAPf,UAUE,cAAC,EAAD,qBACA,cAAC,EAAD,CAAUzD,SAAO,IACjB,cAAC,EAAD,IACA,cAAC,EAAD,CAAOY,MAAOA,EAAOe,QAASsB,EAAKrB,eAAgBA,IACnD,cAAC,EAAD,IACA,sBAAML,MAAO,CAAEC,SAAU,UAAzB,SAAsC0B,IACtC,cAAC,EAAD,CAAOT,cArBW,SAAC7B,GACrBuC,EAAcvC,IAoByBA,MAAOsC,IAC5C,cAAC,EAAD,CAAQtC,MAAOA,EAAOe,QAASsB,EAAKrB,eAAgBA,QCzB3C8B,MARf,WACE,OACE,qBAAKxE,UAAU,MAAf,SACE,cAAC,EAAD,OCANyE,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bee918bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Range_wrapper__1jCIW\",\"container\":\"Range_container__3yAd_\",\"doubleRange\":\"Range_doubleRange__3dHez\",\"sliderTrack\":\"Range_sliderTrack__17no4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Checkbox_input__qRtKg\",\"label\":\"Checkbox_label__1Y7qf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Input_superInput__101bN\",\"errorInput\":\"Input_errorInput__2kQCt\",\"error\":\"Input_error__2JFCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__1knTv\",\"red\":\"Button_red__2SQ74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customRadios\":\"Radio_customRadios__3ilr1\",\"optionInput\":\"Radio_optionInput__3zbtW\",\"click-wave\":\"Radio_click-wave__6phRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3masx\"};","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport s from \"./Button.module.css\";\n\ntype DefaultButtonPropsType = DetailedHTMLProps<\n  ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\ntype ButtonPropsType = DefaultButtonPropsType & {\n  red?: boolean;\n};\n\nexport const Button: React.FC<ButtonPropsType> = ({\n  red,\n  className,\n  ...restProps\n}) => {\n  const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n  return <button className={finalClassName} {...restProps} />;\n};\n","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n} from \"react\";\nimport s from \"./Checkbox.module.css\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype CheckboxPropsType = DefaultInputPropsType & {\n  onChangeChecked?: (checked: boolean) => void;\n  spanClassName?: string;\n};\n\nexport const Checkbox: React.FC<CheckboxPropsType> = ({\n  type,\n  onChange,\n  onChangeChecked,\n  className,\n  spanClassName,\n  children,\n  ...restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && onChange(e);\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\n  };\n\n  const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n  return (\n    <>\n      <input\n        type={\"checkbox\"}\n        onChange={onChangeCallback}\n        className={s.input}\n        {...restProps}\n      />\n      {children && <span className={s.spanClassName}>{children}</span>}\n      <label className={s.label}></label>{\" \"}\n    </>\n  );\n};\n","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n  KeyboardEvent,\n} from \"react\";\nimport s from \"./Input.module.css\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype InputPropsType = DefaultInputPropsType & {\n  onChangeText?: (value: string) => void;\n  onEnter?: () => void;\n  error?: string;\n  spanClassName?: string;\n};\n\nexport const Input: React.FC<InputPropsType> = ({\n  type,\n  onChange,\n  onChangeText,\n  onKeyPress,\n  onEnter,\n  error,\n  className,\n  spanClassName,\n  ...restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && onChange(e);\n    onChangeText && onChangeText(e.currentTarget.value);\n  };\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n    onKeyPress && onKeyPress(e);\n    onEnter && e.key === \"Enter\" && onEnter();\n  };\n\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n  const finalInputClassName = `${error ? s.errorInput : s.superInput} ${\n    className ? className : \"\"\n  }`;\n\n  return (\n    <>\n      <input\n        type={\"text\"}\n        onChange={onChangeCallback}\n        onKeyPress={onKeyPressCallback}\n        className={finalInputClassName}\n        {...restProps}\n      />\n      {error && <span className={finalSpanClassName}>{error}</span>}\n    </>\n  );\n};\n","import React, {\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n  HTMLAttributes,\n  useState,\n} from \"react\";\n\nimport s from \"./EditableSpan.module.css\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { Input } from \"../Input/Input\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype DefaultSpanPropsType = DetailedHTMLProps<\n  HTMLAttributes<HTMLSpanElement>,\n  HTMLSpanElement\n>;\n\ntype EditableSpanType = DefaultInputPropsType & {\n  onChangeText?: (value: string) => void;\n  onEnter?: () => void;\n  error?: string;\n  spanClassName?: string;\n  spanProps?: DefaultSpanPropsType;\n};\n\nexport const EditableSpan: React.FC<EditableSpanType> = ({\n  autoFocus,\n  onBlur,\n  onEnter,\n  spanProps,\n  ...restProps\n}) => {\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const { children, onDoubleClick, className, ...restSpanProps } =\n    spanProps || {};\n\n  const onEnterCallback = () => {\n    onEnter && onEnter();\n  };\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n    setEditMode(false);\n\n    onBlur && onBlur(e);\n  };\n  const onDoubleClickCallBack = (\n    e: React.MouseEvent<HTMLSpanElement, MouseEvent>\n  ) => {\n    setEditMode(true);\n\n    onDoubleClick && onDoubleClick(e);\n  };\n\n  const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\n\n  return (\n    <>\n      {editMode ? (\n        <Input\n          autoFocus\n          onBlur={onBlurCallback}\n          onEnter={onEnterCallback}\n          {...restProps}\n        />\n      ) : (\n        <span\n          onDoubleClick={onDoubleClickCallBack}\n          className={spanClassName}\n          {...restSpanProps}\n        >\n          <FaEdit style={{ fontSize: \"1.8rem\" }} />{\" \"}\n          {children || restProps.value}\n        </span>\n      )}\n    </>\n  );\n};\n","import React, {\n  ChangeEvent,\n  InputHTMLAttributes,\n  DetailedHTMLProps,\n} from \"react\";\nimport s from \"./Radio.module.css\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype RadioPropsType = DefaultRadioPropsType & {\n  options?: any[];\n  onChangeOption?: (option: any) => void;\n};\n\nexport const Radio: React.FC<RadioPropsType> = ({\n  type,\n  name,\n  options,\n  value,\n  onChange,\n  onChangeOption,\n  ...restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && onChange(e);\n    onChangeOption && onChangeOption(e.currentTarget.value);\n  };\n\n  const mappedOptions: any[] = options\n    ? options.map((o, i) => (\n        <label key={name + \"-\" + i}>\n          <input\n            className={s.optionInput}\n            type=\"radio\"\n            name={name}\n            value={o}\n            checked={value === o}\n            onChange={onChangeCallback}\n          />\n          {o}\n        </label>\n      ))\n    : [];\n\n  return <div className={s.customRadios}>{mappedOptions}</div>;\n};\n","import React, {\n  SelectHTMLAttributes,\n  DetailedHTMLProps,\n  ChangeEvent,\n} from \"react\";\nimport s from \"./Select.module.css\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<\n  SelectHTMLAttributes<HTMLSelectElement>,\n  HTMLSelectElement\n>;\n\ntype SelectPropsType = DefaultSelectPropsType & {\n  options?: any[];\n  onChangeOption?: (option: any) => void;\n};\n\nexport const Select: React.FC<SelectPropsType> = ({\n  options,\n  onChange,\n  onChangeOption,\n  ...restProps\n}) => {\n  const mappedOptions: any[] = options\n    ? options.map((o, i) => {\n        return <option key={i}>{o}</option>;\n      })\n    : [];\n\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n    onChange && onChange(e);\n    onChangeOption && onChangeOption(e.currentTarget.value);\n    console.log(\"select \" + e.currentTarget.value);\n  };\n\n  return (\n    <div className={s.select}>\n      <select onChange={onChangeCallback} {...restProps}>\n        {mappedOptions}\n      </select>\n    </div>\n  );\n};\n","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n} from \"react\";\nimport styles from \"./Range.module.css\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype RangePropsType = DefaultInputPropsType & {\n  onChangeRange?: (value: number) => void;\n};\n\nexport const Range: React.FC<RangePropsType> = ({\n  type,\n  onChange,\n  onChangeRange,\n  className,\n  value,\n  ...restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && onChange(e);\n\n    onChangeRange && onChangeRange(+e.currentTarget.value);\n  };\n\n  const finalRangeClassName = `${styles.slider} ${className ? className : \"\"}`;\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.container}>\n        <div className={styles.sliderTrack}></div>\n        <input\n          type={\"range\"}\n          className={styles.doubleRange}\n          onChange={onChangeCallback}\n          {...restProps}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Checkbox } from \"../../UI-kit/Checkbox/Checkbox\";\r\nimport { EditableSpan } from \"../../UI-kit/EditableSpan/EditableSpan\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Radio } from \"../../UI-kit/Radio/Radio\";\r\nimport { Select } from \"../../UI-kit/Select/Select\";\r\nimport { Range } from \"../../UI-kit/Range/Range\";\r\n\r\nexport const TestPage = () => {\r\n  const arr: string[] = [\"apple\", \"grape\", \"cherry\"];\r\n  const [value, onChangeOption] = useState(arr[1]);\r\n  const [rangeValue, setRangeValue] = useState(0);\r\n\r\n  const changeHandler = (value: number) => {\r\n    setRangeValue(value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        height: \"80vh\",\r\n        marginTop: \"5rem\",\r\n      }}\r\n    >\r\n      <Button>button</Button>\r\n      <Checkbox checked />\r\n      <EditableSpan />\r\n      <Radio value={value} options={arr} onChangeOption={onChangeOption} />\r\n      <Input />\r\n      <span style={{ fontSize: \"1.7rem\" }}>{rangeValue}</span>\r\n      <Range onChangeRange={changeHandler} value={rangeValue} />\r\n      <Select value={value} options={arr} onChangeOption={onChangeOption} />\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { TestPage } from \"./components/TestPage/TestPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TestPage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}